- name: Create data and log directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /var/lib/mongodb1/data
    - /var/lib/mongodb2/data
    - /var/lib/mongodb3/data
    - /var/log/mongodb1
    - /var/log/mongodb2
    - /var/log/mongodb3
    - /etc/mongod1
    - /etc/mongod2
    - /etc/mongod3

- name: Create docker network
  command: "docker network create -d bridge mongo_network"
  ignore_errors: true

- name: Pull MongoDB image
  command: "docker pull mongo:4.4.6"

- name: Copy configuration files
  template:
    src: "roles/mongodb/templates/mongo.conf.j2"
    dest: "/etc/mongod{{ item.num }}/mongod.conf"
  with_items:
    - { num: 1 }
    - { num: 2 }
    - { num: 3 }
- name: Create systemd unit files for MongoDB containers
  template:
    src: "templates/systemd_unit.j2"
    dest: "/etc/systemd/system/mongodb{{ item.num }}.service"
  with_items:
    - { name: "mongodb1", port: 27017, num: 1 }
    - { name: "mongodb2", port: 27018, num: 2 }
    - { name: "mongodb3", port: 27019, num: 3 }

- name: Restart systemd daemon
  systemd: daemon_reexec=yes


- name: Start MongoDB containers
  systemd:
    name: mongodb{{ item.num }}
    state: started
    enabled: yes
  with_items:
    - { num: 1 }
    - { num: 2 }
    - { num: 3 }

- name: Create script for Replica Set initialization
  template:
      src: "roles/mongodb/templates/replica_init.js.j2"
      dest: "/tmp/replica_init_script.js"

- name: Execute Replica Set initialization script
  command: "docker exec mongodb1 mongo --eval 'load(\"/tmp/replica_init_script.js\")'"